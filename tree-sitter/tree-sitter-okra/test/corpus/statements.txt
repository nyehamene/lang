=====================
namespace
=====================

namespace foo;

---------------------

(program
    (namespace name: (identifier)))

====================
let
====================

let x;
let x = x;

let x x;
let x x = x;

let x x = true;
let x x = false;
let x x = nil;
let x x = "";
let x x = 0;

let x = true;
let x = false;
let x = nil;
let x = "";
let x = 0;

--------------------

(program
    (let
        name: (identifier))
    (let
        name: (identifier)
        value: (identifier))
    (let
        name: (identifier)
        type: (identifier))
    (let
        name: (identifier)
        type: (identifier)
        value: (identifier))

    (let
        name: (identifier)
        type: (identifier)
        value: (true_literal))
    (let
        name: (identifier)
        type: (identifier)
        value: (false_literal))
    (let
        name: (identifier)
        type: (identifier)
        value: (nil_literal))
    (let
        name: (identifier)
        type: (identifier)
        value: (string_literal))
    (let
        name: (identifier)
        type: (identifier)
        value: (integer_literal))
    (let
        name: (identifier)
        value: (true_literal))
    (let
        name: (identifier)
        value: (false_literal))
    (let
        name: (identifier)
        value: (nil_literal))
    (let
        name: (identifier)
        value: (string_literal))
    (let
        name: (identifier)
        value: (integer_literal)))

=====================
block
=====================

do
  let x;
  let y;
end

---------------------

(program
    (block
        (let name: (identifier))
        (let name: (identifier))))

=====================
import
=====================

import x;

---------------------

(program
    (import
        name: (identifier)))

===========================
call (1)
===========================

x();

---------------------------

(program
    (call
        fun: (identifier)
        (arguments)))

============================
namespace type (1)
============================

let x x.x;

----------------------------

(program
    (let
        name: (identifier)
        type: (namespaced_type
                namespace: (identifier)
                type: (identifier))))

================================
namespace type (2)
================================

fun x (x x.x) do end

--------------------------------

(program
    (function
        name: (identifier)
        (parameters
          (parameter
            name: (identifier)
            type: (namespaced_type
                    namespace: (identifier)
                    type: (identifier))))
        body: (block)))

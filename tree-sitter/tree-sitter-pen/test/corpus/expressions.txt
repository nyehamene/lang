================
expression
================

example "check all expression types" do
    let s = "";
    let i = 10;
    let ii = 1_000;
    let t = true;
    let f = false;
    let n = nil;

    let x = try y;

    x;

    x.x;
    x.x.x;

    x x;
    x x x;

    x.x do end
    x.x x do end
    x.x x x do end

    x do end
    x x do end
    x x x do end
end

-----------------

(program (example_declaration (example desc: (string_literal) body: (block
    (let_statement name: (identifier) value: (string_literal))
    (let_statement name: (identifier) value: (numeric_literal))
    (let_statement name: (identifier) value: (numeric_literal))
    (let_statement name: (identifier) value: (true_literal))
    (let_statement name: (identifier) value: (false_literal))
    (let_statement name: (identifier) value: (nil_literal))
    (let_statement name: (identifier) value: (try_expression (identifier)))

    (statement (function_call
        name: (identifier)))

    (statement (field_access
        object: (identifier)
        (identifier)))

    (statement (field_access
        object: (identifier)
        (field_access
            object: (identifier)
            (identifier))))

    (statement (function_call
        name: (identifier)
        argument: (identifier)))

    (statement (function_call
        name: (identifier)
        argument: (identifier)
        argument: (identifier)))

    (statement (field_access
        (identifier)
        (function_call
            name: (identifier))))

    (statement (field_access
        (identifier)
        (function_call
            name: (identifier)
            argument: (identifier))))

    (statement (field_access
        (identifier)
        (function_call
            name: (identifier)
            argument: (identifier)
            argument: (identifier))))

    (statement (block_function_call
        name: (identifier)))

    (statement (block_function_call
        name: (identifier)
        argument: (identifier)))

    (statement (block_function_call
        name: (identifier)
        argument: (identifier)
        argument: (identifier)))
))))
